def demonstrate_data_types():
    print("=== Data Types ===")
    integer_num = int(input("Enter an integer: "))
    float_num = float(input("Enter a float: "))
    string_text = input("Enter a string: ")
    boolean_input = input("Enter a boolean (True/False): ").strip().lower()
    boolean_value = boolean_input == "true"

    print(f"Integer: {integer_num} (type: {type(integer_num)})")
    print(f"Float: {float_num} (type: {type(float_num)})")
    print(f"String: {string_text} (type: {type(string_text)})")
    print(f"Boolean: {boolean_value} (type: {type(boolean_value)})\n")

# --- Operators ---
def demonstrate_operators():
    print("=== Operators ===")
    a = int(input("Enter value for a: "))
    b = int(input("Enter value for b: "))

    print(f"Addition: {a} + {b} = {a + b}")
    print(f"Subtraction: {a} - {b} = {a - b}")
    print(f"Multiplication: {a} * {b} = {a * b}")
    print(f"Division: {a} / {b} = {a / b if b != 0 else 'undefined'}")
    print(f"Modulus: {a} % {b} = {a % b if b != 0 else 'undefined'}")
    print(f"Exponent: {a} ** {b} = {a ** b}")
    print(f"Floor Division: {a} // {b} = {a // b if b != 0 else 'undefined'}")

    print(f"Equal: {a} == {b} -> {a == b}")
    print(f"Not Equal: {a} != {b} -> {a != b}")
    print(f"Greater than: {a} > {b} -> {a > b}")
    print(f"Less than or equal: {a} <= {b} -> {a <= b}")

    print(f"Logical AND: {a > 5 and b < 5}")
    print(f"Logical OR: {a < 5 or b < 5}")
    print(f"Logical NOT: not({a > 5}) -> {not(a > 5)}\n")

# --- Control Statements ---
def demonstrate_control_statements():
    print("=== Control Statements ===")
    x = int(input("Enter a value for x: "))

    if x > 10:
        print("x is greater than 10")
    elif x == 10:
        print("x is exactly 10")
    else:
        print("x is less than 10")

    print("\nFor loop: Numbers from 1 to 5")
    for i in range(1, 6):
        print(i, end=" ")
    print()

    print("\nWhile loop: Countdown from 5")
    counter = 5
    while counter > 0:
        print(counter, end=" ")
        counter -= 1
    print("\n")

# --- Main Execution ---
if __name__ == "__main__":
    demonstrate_data_types()
    demonstrate_operators()
    demonstrate_control_statements()
